---
layout: post
title:  "Research Techniques Notes on Lecture 8 [CS230] (2019)"
date:   2019-05-22 07:00:00 -0700
categories: Training
---

Andrew Ng’s tips to navigate a new problem space or research topic.

### _“Reading Map“_

1. Compile a list of resources: can include papers, books, blogs et.al.
2. Skip around list
   * a) For e.g., we found five papers
   * b) Quickly skim:
        * i) eliminate from the list
        * ii) focus on remaining with perhaps couple that seems seminal
        * iii) add to list
        * iv) 5–20 papers on average is sufficient for applied work, 50-100 (or beyond) papers start approaching Ph.D./ formal research.
3. Remember 2 papers a week vs 0 papers a week is the difference between zero expertise and mastery within a year (at a very relaxed pace).
4. Quality indicators for a resource
   * a) citations vs time
   * b) repetition, applicability by others

### _“Reading How-To“_

1. Write notes
2. Multiple passes, read the
   * a) abstract / title / figures [skim]
   * b) introduction & conclusions [skim, skip math]
   * c) whole paper [skip math]
   * d) whole paper [including math]

### _“Math How-To“_

1. Re-Derive from scratch [ time-intensive but worth doing for key material ]
2. Code
   * a) Run / Play with open-source or other available repositories
   * b) Refactor / Tweak for new use-cases or features
   * c) Re-implement / Extend

### _“Questions-To-Ask“_

1. What did the authors try to accomplish?
2. What are the key elements of their approach?
3. What can you use for your scope or project?
4. What references are worth drilling down into? (e.g. some references may be in place for less than optimal reasons)

### _“Reading Sourcing“_

1. MIPS / ICML / ICLR
2. Arxiv Sanity [some folks find this useful]
3. Google Scholar or similar
4. Twitter / ML Subreddit [tweak: filter for pure URLs/PDFs to kill noise]
5. Friends / Community
